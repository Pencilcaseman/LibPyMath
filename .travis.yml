language: python
os: linux
env:
  global:
    # - CIBW_SKIP=cp34-*
    - CIBW_BUILD=cp3?-*
    - CIBW_MANYLINUX_X86_64_IMAGE=manylinux1
    - CIBW_MANYLINUX_I686_IMAGE=manylinux1
    - TWINE_USERNAME=__token__

matrix:
  include:
    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc5 && CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc6 && CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"

before_install:
    - eval "${MATRIX_EVAL}"

jobs:
  include:
    - services: docker
    - os: osx
      before_install:
        # - brew install llvm
        - ls /usr/bin/
        - alias gcc='gcc-4.8'
        - alias cc='gcc-4.8'
        - alias g++='g++-4.8'
        - alias c++='c++-4.8'
        - C=/usr/local/opt/llvm/bin/clang
        - CXX=/usr/local/opt/llvm/bin/clang++
      language: generic
      env: MACOSX_DEPLOYMENT_TARGET=10.9
    - os: windows
      language: bash
      before_install:
        - choco install python --version 3.8.0
        - export PATH="/c/Python38:/c/Python/Scripts:$PATH"
install:
  - python -m pip install -U setuptools wheel twine cibuildwheel==1.1.0
script:
  - python -m cibuildwheel --output-dir ./wheelhouse
  - ls wheelhouse
after_success:
  - if [[ $TRAVIS_TAG ]]; then python3 -m twine upload wheelhouse/*.whl; fi

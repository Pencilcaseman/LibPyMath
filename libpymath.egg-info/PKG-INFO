Metadata-Version: 2.1
Name: libpymath
Version: 0.0.13
Summary: A general purpose Python math module
Home-page: https://www.github.com/pencilcaseman/gpc
Author: Toby Davis
Author-email: pencilcaseman@gmail.com
License: MIT Licences
Description: [![Build Status](https://travis-ci.com/Pencilcaseman/LibPyMath.svg?branch=master)](https://travis-ci.com/Pencilcaseman/LibPyMath)
        [![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/Pencilcaseman/LibPyMath)
        [![PyPI version fury.io](https://badge.fury.io/py/libpymath.svg)](https://pypi.python.org/pypi/libpymath/)
        [![PyPI license](https://img.shields.io/pypi/l/libpymath.svg)](https://pypi.python.org/pypi/libpymath/)
        [![PyPI pyversions](https://img.shields.io/pypi/pyversions/libpymath.svg)](https://pypi.python.org/pypi/libpymath/)
        [![Downloads per month](https://img.shields.io/pypi/dm/libpymath.svg)](https://pypi.python.org/pypi/libpymath/)
        
        # LibPyMath
        ### A fast, general purpose Python library
        ---
        
        ## Install
        Run ```pip install libpymath``` to dowload and install ```libpymath``` for your operating system and python version. There are also wheels provided for many of the latest Python versions on Windows, Mac OS and Linux thanks to the ```cibuildwheel``` project.
        
        ---
        
        ## Features and usage
        ### Matrix math
        Easily create, manipulate and perform calculations with dense matrices. The matrices themselves are stored and manipulated with optimised C code, resulting in faster operations and more efficient calculations.
        
        The matrix library is currently very primitive and supports very few operations, though is constantly being expanded on and improved. Many ease of use features also exist, such as the ability to format and print a matrix, alligning the decimal points (if present) and providing brackets in the relevant places.
        
        For example, the following creates a new matrix from a 2d list of data
        ```python
        from libpymath.matrix import Matrix
        
        matrixData = [[1, 2, 3],
                      [4, 5, 6],
                      [7, 8, 9]]
        
        mat = Matrix(data=matrixData)
        
        print(mat)
        ```
        
Keywords: math,matrix,vector,network,neural network,libpymath,pymath,libmath,progress bar,progress
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Operating System :: MacOS
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft
Classifier: Operating System :: Microsoft :: MS-DOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: BSD
Classifier: Operating System :: POSIX :: BSD :: FreeBSD
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Description-Content-Type: text/markdown
